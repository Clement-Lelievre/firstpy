# ce code se propose de résoudre l'énigme des pirates et des lingots: p pirates se partagent l lingots. Pour cela ils se classent par ordre décroissant d'âge (pas d'ex aequo) et vont les uns après les autres, en commençant par le plus âgé, proposer une répartition des lingots. Si celle-ci est acceptée (majorité absolue requise), ils procèdent au partage voté, mais si elle est refusée, le pirate ayant fait la proposition devient hors-jeu et c'est au pirate suivant de faire sa proposition, et ainsi de suite. On suppose les pirates suffisamment rationnels et intelligents. Enfin chaque pirate peut voter pour sa propre répartition. Quelle est la répartition optimale?

print('Combien de pirates?')
p=input()
while int(p)<3:
  print('p >= 3 please')
  p=input()
print('Et combien de lingots?')
l=input()
print('OK, voici la répartition optimale pour',p,'pirates et',l,'lingots:')

r=[0]*int(p) # r comme répartition. C'est un vecteur ligne qui représente la répartition de lingots

a=int
m=int

# comme la résolution de l'énigme, le code part de la fin: il remonte du dernier pirate au premier à s'exprimer



r[int(p)-1]=int(l)   # ceci correspond à l'étape 1 càd la répartition proposée par le dernier pirate.

# il n'y a aucun changement à l'étape 2 puisque l'avant-dernier prisonnier verra sa proposition refusée (sauf s'il donne tout au dernier prisonnier...)

for i in range(1,int(p)+1):          

 a = i//2                    # identification du nombre de pirates à soudoyer par le pirate n° i en partant de la fin = du nombre de lingots à donner
 
 r1=r[int(p)-(i-1):int(p)]         # on crée une liste raccourcie issue de r, qui contient les pirates qui vont voter pour le pirate en cours
 
 for z in range (0,int(p)):
   r[z]=0            # on met à 0 provisoirement 

 for k in range (1,a+1):
   m = int(min(r1))      
   n = r1.index(m)    # identifie l'indice dans r1 du min (il peut y avoir plusieurs ex aequo)          
   r[n+int(len(r))-int(len(r1))]= m+1    # on augmente d'un lingot
   r1[n]=int(l)+1   # on le met égal à l+1 pour éviter d'avoir à le supprimer, et pour pouvoir continuer la boucle avec le min suivant

 s=0
 for j in range(int(p)-i+1,int(p)):
   s += r[j]       # s est la somme des lingots donnés aux autres pour gagner leur vote

 r[int(p)-i]= int(l) - int(s)  # le pirate numéro i s'attribue tous les lingots restants après sa distribution de pots-de-vin


if r[0]+int(s) != int(l):
  print('ERREUR: nombre de lingots déconne')  # vérif 


print('La répartition optimale, qui sera acceptée à l_issue du 1er vote, est:\n',r)

 
 





